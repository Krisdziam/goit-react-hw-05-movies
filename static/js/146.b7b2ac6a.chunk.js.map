{"version":3,"file":"static/js/146.b7b2ac6a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Pages/FilmInfoPage/FilmDetails/FilmsDetails.module.css?9204","Pages/FilmInfoPage/FilmDetails/FilmDetails.jsx","Pages/FilmInfoPage/FilmInfoPage.module.css","Pages/FilmInfoPage/FilmInfoPage.jsx","ServiceApi/ServiceApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"details\":\"FilmsDetails_details__ZMgJA\",\"img__wrapper\":\"FilmsDetails_img__wrapper__qi6tq\",\"img\":\"FilmsDetails_img__Fr9D6\",\"goBackBtn\":\"FilmsDetails_goBackBtn__lGHhc\",\"description\":\"FilmsDetails_description__HA2Td\",\"title__wrapper\":\"FilmsDetails_title__wrapper__4I9iW\",\"title\":\"FilmsDetails_title__pNciJ\",\"tagline\":\"FilmsDetails_tagline__LSFTX\",\"list\":\"FilmsDetails_list__VnE7x\",\"item\":\"FilmsDetails_item__4iWQY\",\"span\":\"FilmsDetails_span__k6l-T\",\"genres\":\"FilmsDetails_genres__aX4p1\",\"overview\":\"FilmsDetails_overview__AURm9\",\"moreInfo\":\"FilmsDetails_moreInfo__WgG18\",\"nextBtn\":\"FilmsDetails_nextBtn__qvZ5U\"};","import { Link, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport styles from './FilmsDetails.module.css';\nimport { IoArrowBackOutline } from 'react-icons/io5';\n\nconst FilmDetails = ({ data }) => {\n  const location = useLocation();\n  const {\n    genres,\n    overview,\n    release_date,\n    production_countries,\n    runtime,\n    vote_average,\n    title,\n    tagline,\n    poster_path,\n  } = data;\n\n  function timeConvert(time) {\n    var duration = time;\n    var hours = duration / 60;\n    var roundedHours = Math.floor(hours);\n    var minutes = (hours - roundedHours) * 60;\n    var roundedMinutes = Math.round(minutes);\n    let hoursText =\n      roundedHours === 1\n        ? `${roundedHours} hour `\n        : `${roundedHours} hours `;\n    let minutesText =\n      roundedMinutes === 1\n        ? `${roundedMinutes} minute`\n        : `${roundedMinutes} minutes`;\n\n    if (roundedHours === 0) {\n      hoursText = '';\n    }\n    if (roundedMinutes === 0) {\n      minutesText = '';\n    }\n\n    return hoursText + minutesText;\n  }\n\n  return (\n    <>\n      <div className={styles.details}>\n        <div className={styles.img__wrapper}>\n          <img\n            className={styles.img}\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"poster\"\n            width=\"350\"\n            height=\"400\"\n          />\n          <Link\n            className={styles.goBackBtn}\n            to={location?.state?.from || '/'}\n          >\n            <IoArrowBackOutline />\n          </Link>\n        </div>\n        <div className={styles.description}>\n          <div className={styles.title__wrapper}>\n            <h2 className={styles.title}>{title}</h2>\n            {tagline !== '' ? (\n              <p className={styles.tagline}>\"{tagline}\"</p>\n            ) : (\n              ''\n            )}\n          </div>\n\n          <ul className={styles.list}>\n            <li className={styles.item}>\n              User Score:\n              <span className={styles.span}>\n                {vote_average}\n              </span>\n            </li>\n            <li className={styles.item}>\n              Runtime:\n              <span className={styles.span}>\n                {timeConvert(runtime)}\n              </span>\n            </li>\n            <li className={styles.item}>\n              Release date:{' '}\n              <span className={styles.span}>\n                {new Date(\n                  release_date\n                ).toLocaleDateString()}\n              </span>\n            </li>\n            <li className={styles.item}>\n              Genres:\n              <ul className={styles.genres}>\n                {genres.length > 0 ? (\n                  genres.map(({ id, name }, index) => (\n                    <li\n                      className={styles.genres__item}\n                      key={id}\n                    >\n                      {(index ? ', ' : '') + name}\n                    </li>\n                  ))\n                ) : (\n                  <p className={styles.genres__item}>\n                    Other\n                  </p>\n                )}\n              </ul>\n            </li>\n\n            <li className={styles.item}>\n              Countries:\n              <span className={styles.span}>\n                {production_countries.map(\n                  ({ name }) => name\n                )}\n              </span>\n            </li>\n          </ul>\n\n          <p className={styles.overview}>{overview}</p>\n\n          <div className={styles.moreInfo}>\n            <Link className={styles.nextBtn} to={'cast'}>\n              Cast\n            </Link>\n            <Link className={styles.nextBtn} to={'reviews'}>\n              Reviews\n            </Link>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FilmDetails;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { fetchInfo } from 'ServiceApi/ServiceApi';\nimport { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useLocation,\n  Outlet,\n} from 'react-router-dom';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport FilmDetails from './FilmDetails/FilmDetails';\nimport styles from './FilmInfoPage.module.css';\n\nexport default function FilmInfoPage() {\n  const [film, setFilm] = useState();\n  const { id } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchInfo(id)\n      .then(data => {\n        Loading.pulse({\n          svgColor: '#32c682',\n          svgSize: '100px',\n          cssAnimationDuration: 800,\n        });\n        setFilm(data);\n      })\n      .finally(() => {\n        Loading.remove();\n      });\n  }, [id]);\n\n  return (\n    <div className={styles.container}>\n      {film && (\n        <FilmDetails\n          location={location.state ?? '/'}\n          data={film}\n        />\n      )}\n      <Outlet />\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nconst API_KEY = \"3cd5ca2b87850020dae80128c26cb9e1\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\nexport async function fetchSearchFilms(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchCasts(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n\n\n\n"],"names":["data","location","useLocation","genres","overview","release_date","production_countries","runtime","vote_average","title","tagline","poster_path","className","styles","src","alt","width","height","to","state","from","time","hours","roundedHours","Math","floor","minutes","roundedMinutes","round","hoursText","minutesText","timeConvert","Date","toLocaleDateString","length","map","index","id","name","FilmInfoPage","useState","film","setFilm","useParams","useEffect","fetchInfo","then","Loading","svgColor","svgSize","cssAnimationDuration","finally","API_KEY","fetchFilms","axios","response","results","fetchSearchFilms","query","movie_id","fetchReviews","fetchCasts","cast"],"sourceRoot":""}