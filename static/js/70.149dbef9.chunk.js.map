{"version":3,"file":"static/js/70.149dbef9.chunk.js","mappings":"mPAOe,SAASA,IAAgB,IAAD,EACvC,GAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAMC,EAAAA,EAAAA,MAAND,GAEDE,GAAWC,EAAAA,EAAAA,MAGXC,GAAO,WAFIC,EAAAA,EAAAA,MAEKC,aAAT,eAAgBF,OAAQ,UAsBnC,OAhBFG,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAUR,GACPS,MAAK,SAACC,GACLC,EAAAA,QAAAA,OAAe,CACbC,SAAU,UACVC,qBAAsB,MAExBd,EAAQW,EACT,IACAI,SAAQ,WACPH,EAAAA,QAAAA,QACD,GACJ,GAAE,CAACX,KAKF,4BACJ,mBAAQe,QAtBO,WACbb,EAASE,EACV,EAoBwBY,KAAK,SAA9B,qBACClB,GAAQA,EAAKmB,OACd,2BACY,yBACE,SAAC,KAAD,CAAMX,MAAO,CAAEF,KAAAA,GAAQc,GAAG,OAA1B,qBAIF,yBAEE,SAAC,KAAD,CAAMZ,MAAO,CAAEF,KAAAA,GAAQc,GAAG,UAA1B,2BAMd,SAAC,KAAD,MAGC,C,8LCvDKC,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,GAAAA,IAAA,iCACKF,EADL,2BADlB,cACCG,EADD,yBAIEA,EAASZ,KAAKa,SAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBJ,EAAAA,GAAAA,IAAA,gCACIF,EADJ,iCACoCM,EADpC,gCADlB,cACCH,EADD,yBAIEA,EAASZ,KAAKa,SAJhB,kEAOA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAAyBkB,GAAzB,uFACkBL,EAAAA,GAAAA,IAAA,iBACXK,EADW,oBACSP,IAF3B,cACCG,EADD,yBAIEA,EAASZ,MAJX,kEAOA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACiBP,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASZ,KAAKa,SALhB,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACiBP,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASZ,KAAKmB,MALhB,kEAhCPR,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["Pages/FilmInfoPage.jsx","components/ServiceApi/ServiceApi.jsx"],"sourcesContent":["import { fetchInfo } from \"components/ServiceApi/ServiceApi\"\nimport { useState, useEffect } from \"react\"\nimport { useNavigate, useParams, useLocation, Outlet, Link } from \"react-router-dom\"\nimport { Loading } from \"notiflix/build/notiflix-loading-aio\";\n\n\n\nexport default function FilmInfoPage() {\nconst [film, setFilm] = useState()\nconst {id} = useParams()\n\nconst navigate = useNavigate();\nconst location = useLocation();\n\nconst from = location.state?.from || '/movies';\n\nconst goBack = () => {\n  navigate(from);\n};\n\nuseEffect(() => {\n    fetchInfo(id)\n      .then((data) => {\n        Loading.circle({\n          svgColor: \"#ff6b01\",\n          cssAnimationDuration: 800,\n        });\n        setFilm(data);\n      })\n      .finally(() => {\n        Loading.remove();\n      });\n  }, [id]);\n\n\n\n  return (\n    <div>\n<button onClick={goBack} type=\"button\">Go back</button>\n{film && film.title}\n<ul>\n            <li>\n              <Link state={{ from }} to=\"cast\">\n                Cast\n              </Link>\n            </li>\n            <li>\n          \n              <Link state={{ from }} to=\"reviews\">\n                Reviews\n              </Link>\n            </li>\n          </ul>\n\n<Outlet />\n    </div>\n  )\n}\n","import axios from \"axios\";\n\nconst API_KEY = \"3cd5ca2b87850020dae80128c26cb9e1\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\nexport async function fetchSearchFilms(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchCasts(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n\n\n\n"],"names":["FilmInfoPage","useState","film","setFilm","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchInfo","then","data","Loading","svgColor","cssAnimationDuration","finally","onClick","type","title","to","API_KEY","fetchFilms","axios","response","results","fetchSearchFilms","query","movie_id","fetchReviews","fetchCasts","cast"],"sourceRoot":""}