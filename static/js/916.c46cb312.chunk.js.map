{"version":3,"file":"static/js/916.c46cb312.chunk.js","mappings":"qRAGaA,EAAwBC,EAAAA,GAAAA,IAAH,2GAOrBC,GAAeD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wSCPZG,EAAuBH,EAAAA,GAAAA,IAAH,qPAapBI,EAAgBJ,EAAAA,GAAAA,IAAH,2LAWbK,EAAcL,EAAAA,GAAAA,IAAH,8KAWXM,EAAgBN,EAAAA,GAAAA,IAAH,8CAIbO,EAAQP,EAAAA,GAAAA,GAAH,sBAELQ,EAAWR,EAAAA,GAAAA,EAAH,wFAMRS,EAAiBT,EAAAA,GAAAA,IAAH,2FAMdU,GAAOV,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,6XAkBJW,GAAUX,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,2U,SCtClB,EAxBoB,SAAC,GAAc,IAAZY,EAAW,EAAXA,KACbC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,QAASC,EAAgBH,EAAhBG,YACxB,OACE,UAACZ,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,CACEW,IAAG,yCAAoCD,GACvCE,IAAI,YAGN,UAACX,EAAD,YACE,SAACC,EAAD,UAAQM,KACR,SAACL,EAAD,UAAWM,WAIf,UAACL,EAAD,YACE,SAACC,EAAD,CAAMQ,GAAI,OAAV,mBACA,SAACP,EAAD,CAASO,GAAI,UAAb,0BAIP,ECrBY,SAASC,IAAgB,IAAD,IACrC,GAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAmBjB,OAdAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUL,GACPM,MAAK,SAAAjB,GACJkB,EAAAA,QAAAA,OAAe,CACbC,SAAU,UACVC,qBAAsB,MAExBV,EAAQV,EACT,IACAqB,SAAQ,WACPH,EAAAA,QAAAA,QACD,GACJ,GAAE,CAACP,KAGF,iCACE,SAACxB,EAAD,WACE,SAACE,EAAD,CAAciB,IAAY,OAARO,QAAQ,IAARA,GAAA,UAAAA,EAAUS,aAAV,eAAiBC,OAAQ,IAA3C,uBAIDd,IAAQ,SAAC,EAAD,CAAaI,SAAQ,UAAEA,EAASS,aAAX,QAAoB,IAAKtB,KAAMS,KAC7D,SAAC,KAAD,MAGL,C,8LC5CKe,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,GAAAA,IAAA,iCACKF,EADL,2BADlB,cACCG,EADD,yBAIEA,EAAS3B,KAAK4B,SAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBJ,EAAAA,GAAAA,IAAA,gCACIF,EADJ,iCACoCM,EADpC,gCADlB,cACCH,EADD,yBAIEA,EAAS3B,KAAK4B,SAJhB,kEAOA,SAAeZ,EAAtB,+CAAO,OAAP,oBAAO,WAAyBe,GAAzB,uFACkBL,EAAAA,GAAAA,IAAA,iBACXK,EADW,oBACSP,IAF3B,cACCG,EADD,yBAIEA,EAAS3B,MAJX,kEAOA,SAAegC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACiBP,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAAS3B,KAAK4B,SALhB,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,uFACkBL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACiBP,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAAS3B,KAAKkC,MALhB,kEAhCPR,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["Pages/FilmInfoPage/FilmInfoPage.styled.jsx","Pages/FilmInfoPage/FilmDetails/FilmDetails.styled.jsx","Pages/FilmInfoPage/FilmDetails/FilmDetails.jsx","Pages/FilmInfoPage/FilmInfoPage.jsx","components/ServiceApi/ServiceApi.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const ButtonGoBackContainer = styled.div`\n  margin-top: 10px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ButtonGoBack = styled(Link)`\n  padding: 5px 10px;\n  border: none;\n  text-decoration: none;\n  color: #fff;\n  background-color: #000;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #ff6b01;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const ContainerFilmDetails = styled.div`\n  margin-top: 10px;\n  padding: 10px;\n  border-radius: 30px;\n  border: 0.5px solid #fff;\n  background-color: rgba(0, 0, 0, 0.8);\n  color: #fff;\n\n  @media screen and (max-width: 480px) {\n    max-width: 310px;\n  }\n`;\n\nexport const FilmContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n\n  @media screen and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const ImagePoster = styled.img`\n  border: 3px solid #fff;\n  width: 320px;\n  height: 460px;\n\n  @media screen and (max-width: 480px) {\n    width: 250px;\n    height: 350px;\n  }\n`;\n\nexport const ContainerMeta = styled.div`\n  margin-left: 20px;\n`;\n\nexport const Title = styled.h1``;\n\nexport const PreTitle = styled.p`\n  margin-top: 10px;\n  margin-bottom: 20px;\n  color: #818181;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Cast = styled(Link)`\n  padding: 10px 50px;\n  background-color: #fff;\n  border-radius: 20px;\n  margin-right: 30px;\n  text-decoration: none;\n  color: black;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #ff6b01;\n  }\n\n  @media screen and (max-width: 480px) {\n    padding: 10px 30px;\n    margin-right: 10px;\n  }\n`;\n\nexport const Reviews = styled(Link)`\n  padding: 10px 50px;\n  background-color: #fff;\n  border-radius: 20px;\n  text-decoration: none;\n  color: black;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #ff6b01;\n  }\n  @media screen and (max-width: 480px) {\n    padding: 10px 30px;\n  }\n`;\n","import {\n    ContainerFilmDetails,\n    FilmContainer,\n    Reviews,\n    Cast,\n    AdditionalInfo,\n    Title,\n    PreTitle,\n    ContainerMeta,\n    ImagePoster,\n  } from \"./FilmDetails.styled\";\n\n  const FilmDetails = ({ data }) => {\n    const { title, tagline, poster_path } = data;\n    return (\n      <ContainerFilmDetails>\n        <FilmContainer>\n          <ImagePoster\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"poster\"\n          />\n  \n          <ContainerMeta>\n            <Title>{title}</Title>\n            <PreTitle>{tagline}</PreTitle>\n           \n          </ContainerMeta>\n        </FilmContainer>\n        <AdditionalInfo>\n          <Cast to={\"cast\"}>Cast</Cast>\n          <Reviews to={\"reviews\"}>Reviews</Reviews>\n        </AdditionalInfo>\n      </ContainerFilmDetails>\n    );\n  };\n  \n  export default FilmDetails;","import { fetchInfo } from 'components/ServiceApi/ServiceApi';\nimport { useState, useEffect } from 'react';\nimport {\n  useNavigate,\n  useParams,\n  useLocation,\n  Outlet,\n  Link,\n} from 'react-router-dom';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { ButtonGoBackContainer, ButtonGoBack } from \"./FilmInfoPage.styled\";\nimport FilmDetails from './FilmDetails/FilmDetails';\n\nexport default function FilmInfoPage() {\n  const [film, setFilm] = useState();\n  const { id } = useParams();\n  const location = useLocation();\n  // const [prevLocation, setPrevLocation] = useState(\n  //   location?.state?.from ?? '/'\n  // );\n\n  useEffect(() => {\n    fetchInfo(id)\n      .then(data => {\n        Loading.circle({\n          svgColor: '#ff6b01',\n          cssAnimationDuration: 800,\n        });\n        setFilm(data);\n      })\n      .finally(() => {\n        Loading.remove();\n      });\n  }, [id]);\n\n  return (\n    <>\n      <ButtonGoBackContainer>\n        <ButtonGoBack to={location?.state?.from || '/'}>\n          Go back\n        </ButtonGoBack>\n      </ButtonGoBackContainer>\n      {film && <FilmDetails location={location.state ?? '/'} data={film} />}\n      <Outlet />\n    </>\n  );\n}\n","import axios from \"axios\";\n\nconst API_KEY = \"3cd5ca2b87850020dae80128c26cb9e1\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\nexport async function fetchSearchFilms(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchCasts(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n\n\n\n"],"names":["ButtonGoBackContainer","styled","ButtonGoBack","Link","ContainerFilmDetails","FilmContainer","ImagePoster","ContainerMeta","Title","PreTitle","AdditionalInfo","Cast","Reviews","data","title","tagline","poster_path","src","alt","to","FilmInfoPage","useState","film","setFilm","id","useParams","location","useLocation","useEffect","fetchInfo","then","Loading","svgColor","cssAnimationDuration","finally","state","from","API_KEY","fetchFilms","axios","response","results","fetchSearchFilms","query","movie_id","fetchReviews","fetchCasts","cast"],"sourceRoot":""}