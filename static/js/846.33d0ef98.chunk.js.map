{"version":3,"file":"static/js/846.33d0ef98.chunk.js","mappings":"8SAEMA,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,GAAAA,IAAA,iCACKF,EADL,2BADlB,cACCG,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBL,EAAAA,GAAAA,IAAA,gCACIF,EADJ,iCACoCO,EADpC,gCADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uFACkBP,EAAAA,GAAAA,IAAA,iBACXO,EADW,oBACST,IAF3B,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACiBT,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASC,KAAKC,SALhB,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,uFACkBP,EAAAA,GAAAA,IAAA,iBACXO,EADW,4BACiBT,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASC,KAAKQ,MALhB,kEAhCPV,EAAAA,GAAAA,SAAAA,QAAyB,+B,oHCHzB,EAA2B,4BAA3B,EAAkE,4BAAlE,EAAiH,oCAAjH,EAAyK,qCAAzK,EAAqN,wBAArN,EAAyP,6B,SCM1O,SAASW,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAgBR,OAfAE,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAWM,GACRG,MAAK,SAAAhB,GACJiB,EAAAA,QAAAA,MAAc,CACZC,SAAU,UACVC,QAAS,QACTC,qBAAsB,MAExBR,EAAQZ,EACT,IACAqB,SAAQ,WACPJ,EAAAA,QAAAA,QACD,GACJ,GAAE,CAACJ,KAGF,+BAGJ,eAAIS,UAAWC,EAAf,SACOZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,UAAWZ,EAAd,EAAcA,GAAIa,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACR,gBAAIL,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EAAhB,SAA0CI,GACxC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKH,EACLI,MAAM,SAIR,gBACEF,IACE,mKAEFC,IAAKH,EACLI,MAAM,WAIV,iBAAKR,UAAWC,EAAhB,WACA,eAAID,UAAWC,EAAf,SAA6BG,KAC7B,cAAGJ,UAAWC,EAAd,SAAiCE,SApBEZ,EAD7B,OA0Bf,C","sources":["ServiceApi/ServiceApi.jsx","webpack://goit-react-hw-05-movies/./src/components/FilmsCast/FilmsCast.module.css?3949","components/FilmsCast/FilmsCast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"3cd5ca2b87850020dae80128c26cb9e1\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\nexport async function fetchSearchFilms(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchCasts(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"FilmsCast_castList__IO9E0\",\"castItem\":\"FilmsCast_castItem__0D+AA\",\"castImg__wrapper\":\"FilmsCast_castImg__wrapper__T2lZs\",\"castName__wrapper\":\"FilmsCast_castName__wrapper__VtruS\",\"name\":\"FilmsCast_name__eM7bO\",\"character\":\"FilmsCast_character__Y+HEa\"};","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchCasts } from 'ServiceApi/ServiceApi';\nimport styles from './FilmsCast.module.css'\n\nexport default function FilmsCast() {\n  const [film, setFilm] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    fetchCasts(id)\n      .then(data => {\n        Loading.pulse({\n          svgColor: '#32c682',\n          svgSize: '100px',\n          cssAnimationDuration: 800,\n        });\n        setFilm(data);\n      })\n      .finally(() => {\n        Loading.remove();\n      });\n  }, [id]);\n\n  return (\n    <>\n\n\n<ul className={styles.castList}>\n      {film.map(({ character, id, name, profile_path }) => (\n        <li className={styles.castItem} key={id}>\n          <div className={styles.castImg__wrapper}>{profile_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt={name}\n              width=\"150\"\n             \n            />\n          ) : (\n            <img\n              src={\n                'https://media.istockphoto.com/vectors/no-image-available-icon-vector-id1216251206?k=20&m=1216251206&s=170667a&w=0&h=A72dFkHkDdSfmT6iWl6eMN9t_JZmqGeMoAycP-LMAw4='\n              }\n              alt={name}\n              width=\"160\"\n        \n            />\n          )}</div>\n          <div className={styles.castName__wrapper}>\n          <h3 className={styles.name}>{name}</h3>\n          <p className={styles.character}>{character}</p></div>\n        </li>\n      ))}</ul>\n    </>\n  );\n}\n"],"names":["API_KEY","fetchFilms","axios","response","data","results","fetchSearchFilms","query","fetchInfo","movie_id","fetchReviews","fetchCasts","cast","FilmsCast","useState","film","setFilm","id","useParams","useEffect","then","Loading","svgColor","svgSize","cssAnimationDuration","finally","className","styles","map","character","name","profile_path","src","alt","width"],"sourceRoot":""}