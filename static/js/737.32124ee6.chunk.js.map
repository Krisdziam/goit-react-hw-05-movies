{"version":3,"file":"static/js/737.32124ee6.chunk.js","mappings":"6OAMe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAgBR,OAfAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAAAC,GACJC,EAAAA,QAAAA,MAAc,CACZC,SAAU,UACVC,QAAS,QACTC,qBAAsB,MAExBV,EAAQM,EACT,IACAK,SAAQ,WACPJ,EAAAA,QAAAA,QACD,GACJ,GAAE,CAACN,KAGF,8BACGF,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,UAAWZ,EAAd,EAAcA,GAAIa,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACR,0BACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKH,EACLI,MAAM,WAGR,gBACEF,IACE,mKAEFC,IAAKH,EACLI,MAAM,WAGV,wBAAKJ,KACL,uCAAeD,OAjBRZ,EADD,KAuBf,C,8LC/CKkB,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,GAAAA,IAAA,iCACKF,EADL,2BADlB,cACCG,EADD,yBAIEA,EAAShB,KAAKiB,SAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBJ,EAAAA,GAAAA,IAAA,gCACIF,EADJ,iCACoCM,EADpC,gCADlB,cACCH,EADD,yBAIEA,EAAShB,KAAKiB,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uFACkBN,EAAAA,GAAAA,IAAA,iBACXM,EADW,oBACSR,IAF3B,cACCG,EADD,yBAIEA,EAAShB,MAJX,kEAOA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,uFACkBN,EAAAA,GAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAAShB,KAAKiB,SALhB,kEAQA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BuB,GAA1B,uFACkBN,EAAAA,GAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAAShB,KAAKuB,MALhB,kEAhCPR,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["components/FilmsCast/FilmsCast.jsx","components/ServiceApi/ServiceApi.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { fetchCasts } from 'components/ServiceApi/ServiceApi';\n\nexport default function FilmsCast() {\n  const [film, setFilm] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    fetchCasts(id)\n      .then(data => {\n        Loading.pulse({\n          svgColor: '#32c682',\n          svgSize: '100px',\n          cssAnimationDuration: 800,\n        });\n        setFilm(data);\n      })\n      .finally(() => {\n        Loading.remove();\n      });\n  }, [id]);\n\n  return (\n    <>\n      {film.map(({ character, id, name, profile_path }) => (\n        <li key={id}>\n          {profile_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt={name}\n              width=\"150px\"\n            />\n          ) : (\n            <img\n              src={\n                'https://media.istockphoto.com/vectors/no-image-available-icon-vector-id1216251206?k=20&m=1216251206&s=170667a&w=0&h=A72dFkHkDdSfmT6iWl6eMN9t_JZmqGeMoAycP-LMAw4='\n              }\n              alt={name}\n              width=\"150px\"\n            />\n          )}\n          <h3>{name}</h3>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </>\n  );\n}\n","import axios from \"axios\";\n\nconst API_KEY = \"3cd5ca2b87850020dae80128c26cb9e1\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\nexport async function fetchSearchFilms(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchCasts(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n\n\n\n"],"names":["FilmsCast","useState","film","setFilm","id","useParams","useEffect","fetchCasts","then","data","Loading","svgColor","svgSize","cssAnimationDuration","finally","map","character","name","profile_path","src","alt","width","API_KEY","fetchFilms","axios","response","results","fetchSearchFilms","query","fetchInfo","movie_id","fetchReviews","cast"],"sourceRoot":""}