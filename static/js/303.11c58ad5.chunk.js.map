{"version":3,"file":"static/js/303.11c58ad5.chunk.js","mappings":"6OAOe,SAASA,IACxB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAMC,EAAAA,EAAAA,MAAND,GAYL,OAXFE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAACC,GAELN,EAAQM,EACT,GAEJ,GAAE,CAACL,IAIgB,IAAhBF,EAAKQ,QACA,qFAELR,GAEA,wBACGA,EAAKS,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,2BACE,qCAAaD,MACb,uBAAIC,MAFGT,EADD,WAHhB,CAYD,C,8LClCKU,EAAU,mCAIT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,GAAAA,IAAA,iCACKF,EADL,2BADlB,cACCG,EADD,yBAIEA,EAASR,KAAKS,SAJhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBJ,EAAAA,GAAAA,IAAA,gCACIF,EADJ,iCACoCM,EADpC,gCADlB,cACCH,EADD,yBAIEA,EAASR,KAAKS,SAJhB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,uFACkBN,EAAAA,GAAAA,IAAA,iBACXM,EADW,oBACSR,IAF3B,cACCG,EADD,yBAIEA,EAASR,MAJX,kEAOA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA4Be,GAA5B,uFACkBN,EAAAA,GAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASR,KAAKS,SALhB,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BD,GAA1B,uFACkBN,EAAAA,GAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASR,KAAKe,MALhB,kEAhCPR,EAAAA,GAAAA,SAAAA,QAAyB,+B","sources":["components/FilmsReview/FilmsReview.jsx","components/ServiceApi/ServiceApi.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { Loading } from \"notiflix/build/notiflix-loading-aio\";\nimport { fetchReviews } from 'components/ServiceApi/ServiceApi';\n\n\nexport default function FilmsReview() {\nconst [film, setFilm] = useState([])\nconst {id} = useParams()\nuseEffect(() => {\n    fetchReviews(id)\n      .then((data) => {\n     \n        setFilm(data);\n      })\n    \n  }, [id]);\n\n\n\n  if (film.length === 0) {\n    return <h3>There are no reviews yet, you can be first who write it!</h3>;\n  }\n  if (film) {\n    return (\n      <ul>\n        {film.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import axios from \"axios\";\n\nconst API_KEY = \"3cd5ca2b87850020dae80128c26cb9e1\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\n\nexport async function fetchFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\nexport async function fetchSearchFilms(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\nexport async function fetchInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchCasts(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n\n\n\n"],"names":["FilmsReview","useState","film","setFilm","id","useParams","useEffect","fetchReviews","then","data","length","map","author","content","API_KEY","fetchFilms","axios","response","results","fetchSearchFilms","query","fetchInfo","movie_id","fetchCasts","cast"],"sourceRoot":""}